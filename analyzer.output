Terminals unused in grammar

    _AND
    _FOR
    _IN
    _OR


Grammar

    0 $accept: file $end

    1 file: ε
    2     | statement_list
    3     | _NEW_LINE statement_list

    4 statement_list: statement
    5               | statement_list statement

    6 statement: simple_statement _NEW_LINE
    7          | compound_statement

    8 simple_statement: assign_statement
    9                 | return_statement
   10                 | function_call
   11                 | _BREAK
   12                 | _CONTINUE
   13                 | _PASS

   14 compound_statement: function_def
   15                   | if_statement
   16                   | while_statement
   17                   | try_except_statement

   18 assign_statement: _ID _ASSIGN num_exp

   19 return_statement: _RETURN
   20                 | _RETURN num_exp

   21 function_call: _ID _LPAREN arguments _RPAREN

   22 arguments: ε
   23          | arguments args

   24 args: num_exp
   25     | args _COMMA num_exp

   26 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON _NEW_LINE body

   27 parameters: ε
   28           | _ID
   29           | param_with_default_val
   30           | parameters _COMMA _ID
   31           | parameters _COMMA param_with_default_val

   32 param_with_default_val: _ID _ASSIGN num_exp

   33 if_statement: if_part elif_part else_part

   34 if_part: _IF num_exp _COLON _NEW_LINE body

   35 elif_part: ε
   36          | elif_part _ELIF num_exp _COLON _NEW_LINE body

   37 while_statement: while_part else_part

   38 $@1: ε

   39 while_part: _WHILE num_exp _COLON _NEW_LINE $@1 body

   40 try_except_statement: try_part except_part finally_or_else_part

   41 try_part: _TRY _COLON _NEW_LINE body

   42 except_part: ε
   43            | except_part _EXCEPT _ID _COLON _NEW_LINE body
   44            | except_part _EXCEPT _COLON _NEW_LINE body

   45 finally_or_else_part: ε
   46                     | _FINALLY _COLON _NEW_LINE body
   47                     | _ELSE _COLON _NEW_LINE body

   48 else_part: ε
   49          | _ELSE _COLON _NEW_LINE body

   50 body: _INDENT statement_list _DEDENT

   51 num_exp: num_exp_start
   52        | num_exp _AROP num_exp_start
   53        | num_exp _LOP num_exp_start
   54        | num_exp _RELOP num_exp_start

   55 num_exp_start: negation exp

   56 negation: ε
   57         | negation _NOT

   58 exp: literal
   59    | _ID
   60    | function_call
   61    | _LPAREN num_exp _RPAREN

   62 literal: _NUM_BOOL
   63        | _STRING
   64        | _NONE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _NEW_LINE (258) 3 6 26 34 36 39 41 43 44 46 47 49
    _INDENT (259) 50
    _DEDENT (260) 50
    _AND (261)
    _BREAK (262) 11
    _CONTINUE (263) 12
    _DEF (264) 26
    _ELIF (265) 36
    _ELSE (266) 47 49
    _EXCEPT (267) 43 44
    _FINALLY (268) 46
    _FOR (269)
    _IF (270) 34
    _IN (271)
    _NOT (272) 57
    _OR (273)
    _PASS (274) 13
    _RETURN (275) 19 20
    _TRY (276) 41
    _WHILE (277) 39
    _COMMA (278) 25 30 31
    _COLON (279) 26 34 36 39 41 43 44 46 47 49
    _LPAREN (280) 21 26 61
    _RPAREN (281) 21 26 61
    _ASSIGN (282) 18 32
    _AROP <i> (283) 52
    _LOP <i> (284) 53
    _RELOP <i> (285) 54
    _ID <s> (286) 18 21 26 28 30 32 43 59
    _NUM_BOOL <s> (287) 62
    _STRING <s> (288) 63
    _NONE <s> (289) 64
    VAR_ID (290)


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    file (37)
        on left: 1 2 3
        on right: 0
    statement_list (38)
        on left: 4 5
        on right: 2 3 5 50
    statement (39)
        on left: 6 7
        on right: 4 5
    simple_statement (40)
        on left: 8 9 10 11 12 13
        on right: 6
    compound_statement (41)
        on left: 14 15 16 17
        on right: 7
    assign_statement (42)
        on left: 18
        on right: 8
    return_statement (43)
        on left: 19 20
        on right: 9
    function_call <i> (44)
        on left: 21
        on right: 10 60
    arguments (45)
        on left: 22 23
        on right: 21 23
    args (46)
        on left: 24 25
        on right: 23 25
    function_def (47)
        on left: 26
        on right: 14
    parameters (48)
        on left: 27 28 29 30 31
        on right: 26 30 31
    param_with_default_val (49)
        on left: 32
        on right: 29 31
    if_statement (50)
        on left: 33
        on right: 15
    if_part (51)
        on left: 34
        on right: 33
    elif_part (52)
        on left: 35 36
        on right: 33 36
    while_statement (53)
        on left: 37
        on right: 16
    while_part (54)
        on left: 39
        on right: 37
    $@1 (55)
        on left: 38
        on right: 39
    try_except_statement (56)
        on left: 40
        on right: 17
    try_part (57)
        on left: 41
        on right: 40
    except_part (58)
        on left: 42 43 44
        on right: 40 43 44
    finally_or_else_part (59)
        on left: 45 46 47
        on right: 40
    else_part (60)
        on left: 48 49
        on right: 33 37
    body (61)
        on left: 50
        on right: 26 34 36 39 41 43 44 46 47 49
    num_exp <i> (62)
        on left: 51 52 53 54
        on right: 18 20 24 25 32 34 36 39 52 53 54 61
    num_exp_start <i> (63)
        on left: 55
        on right: 51 52 53 54
    negation (64)
        on left: 56 57
        on right: 55 57
    exp <i> (65)
        on left: 58 59 60 61
        on right: 55
    literal <i> (66)
        on left: 62 63 64
        on right: 58


State 0

    0 $accept: • file $end

    _NEW_LINE  shift, and go to state 1
    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    $default  reduce using rule 1 (file)

    file                  go to state 11
    statement_list        go to state 12
    statement             go to state 13
    simple_statement      go to state 14
    compound_statement    go to state 15
    assign_statement      go to state 16
    return_statement      go to state 17
    function_call         go to state 18
    function_def          go to state 19
    if_statement          go to state 20
    if_part               go to state 21
    while_statement       go to state 22
    while_part            go to state 23
    try_except_statement  go to state 24
    try_part              go to state 25


State 1

    3 file: _NEW_LINE • statement_list

    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    statement_list        go to state 26
    statement             go to state 13
    simple_statement      go to state 14
    compound_statement    go to state 15
    assign_statement      go to state 16
    return_statement      go to state 17
    function_call         go to state 18
    function_def          go to state 19
    if_statement          go to state 20
    if_part               go to state 21
    while_statement       go to state 22
    while_part            go to state 23
    try_except_statement  go to state 24
    try_part              go to state 25


State 2

   11 simple_statement: _BREAK •

    $default  reduce using rule 11 (simple_statement)


State 3

   12 simple_statement: _CONTINUE •

    $default  reduce using rule 12 (simple_statement)


State 4

   26 function_def: _DEF • _ID _LPAREN parameters _RPAREN _COLON _NEW_LINE body

    _ID  shift, and go to state 27


State 5

   34 if_part: _IF • num_exp _COLON _NEW_LINE body

    $default  reduce using rule 56 (negation)

    num_exp        go to state 28
    num_exp_start  go to state 29
    negation       go to state 30


State 6

   13 simple_statement: _PASS •

    $default  reduce using rule 13 (simple_statement)


State 7

   19 return_statement: _RETURN •
   20                 | _RETURN • num_exp

    _NEW_LINE  reduce using rule 19 (return_statement)
    $default   reduce using rule 56 (negation)

    num_exp        go to state 31
    num_exp_start  go to state 29
    negation       go to state 30


State 8

   41 try_part: _TRY • _COLON _NEW_LINE body

    _COLON  shift, and go to state 32


State 9

   39 while_part: _WHILE • num_exp _COLON _NEW_LINE $@1 body

    $default  reduce using rule 56 (negation)

    num_exp        go to state 33
    num_exp_start  go to state 29
    negation       go to state 30


State 10

   18 assign_statement: _ID • _ASSIGN num_exp
   21 function_call: _ID • _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 34
    _ASSIGN  shift, and go to state 35


State 11

    0 $accept: file • $end

    $end  shift, and go to state 36


State 12

    2 file: statement_list •
    5 statement_list: statement_list • statement

    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    $default  reduce using rule 2 (file)

    statement             go to state 37
    simple_statement      go to state 14
    compound_statement    go to state 15
    assign_statement      go to state 16
    return_statement      go to state 17
    function_call         go to state 18
    function_def          go to state 19
    if_statement          go to state 20
    if_part               go to state 21
    while_statement       go to state 22
    while_part            go to state 23
    try_except_statement  go to state 24
    try_part              go to state 25


State 13

    4 statement_list: statement •

    $default  reduce using rule 4 (statement_list)


State 14

    6 statement: simple_statement • _NEW_LINE

    _NEW_LINE  shift, and go to state 38


State 15

    7 statement: compound_statement •

    $default  reduce using rule 7 (statement)


State 16

    8 simple_statement: assign_statement •

    $default  reduce using rule 8 (simple_statement)


State 17

    9 simple_statement: return_statement •

    $default  reduce using rule 9 (simple_statement)


State 18

   10 simple_statement: function_call •

    $default  reduce using rule 10 (simple_statement)


State 19

   14 compound_statement: function_def •

    $default  reduce using rule 14 (compound_statement)


State 20

   15 compound_statement: if_statement •

    $default  reduce using rule 15 (compound_statement)


State 21

   33 if_statement: if_part • elif_part else_part

    $default  reduce using rule 35 (elif_part)

    elif_part  go to state 39


State 22

   16 compound_statement: while_statement •

    $default  reduce using rule 16 (compound_statement)


State 23

   37 while_statement: while_part • else_part

    _ELSE  shift, and go to state 40

    $default  reduce using rule 48 (else_part)

    else_part  go to state 41


State 24

   17 compound_statement: try_except_statement •

    $default  reduce using rule 17 (compound_statement)


State 25

   40 try_except_statement: try_part • except_part finally_or_else_part

    $default  reduce using rule 42 (except_part)

    except_part  go to state 42


State 26

    3 file: _NEW_LINE statement_list •
    5 statement_list: statement_list • statement

    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    $default  reduce using rule 3 (file)

    statement             go to state 37
    simple_statement      go to state 14
    compound_statement    go to state 15
    assign_statement      go to state 16
    return_statement      go to state 17
    function_call         go to state 18
    function_def          go to state 19
    if_statement          go to state 20
    if_part               go to state 21
    while_statement       go to state 22
    while_part            go to state 23
    try_except_statement  go to state 24
    try_part              go to state 25


State 27

   26 function_def: _DEF _ID • _LPAREN parameters _RPAREN _COLON _NEW_LINE body

    _LPAREN  shift, and go to state 43


State 28

   34 if_part: _IF num_exp • _COLON _NEW_LINE body
   52 num_exp: num_exp • _AROP num_exp_start
   53        | num_exp • _LOP num_exp_start
   54        | num_exp • _RELOP num_exp_start

    _COLON  shift, and go to state 44
    _AROP   shift, and go to state 45
    _LOP    shift, and go to state 46
    _RELOP  shift, and go to state 47


State 29

   51 num_exp: num_exp_start •

    $default  reduce using rule 51 (num_exp)


State 30

   55 num_exp_start: negation • exp
   57 negation: negation • _NOT

    _NOT       shift, and go to state 48
    _LPAREN    shift, and go to state 49
    _ID        shift, and go to state 50
    _NUM_BOOL  shift, and go to state 51
    _STRING    shift, and go to state 52
    _NONE      shift, and go to state 53

    function_call  go to state 54
    exp            go to state 55
    literal        go to state 56


State 31

   20 return_statement: _RETURN num_exp •
   52 num_exp: num_exp • _AROP num_exp_start
   53        | num_exp • _LOP num_exp_start
   54        | num_exp • _RELOP num_exp_start

    _AROP   shift, and go to state 45
    _LOP    shift, and go to state 46
    _RELOP  shift, and go to state 47

    $default  reduce using rule 20 (return_statement)


State 32

   41 try_part: _TRY _COLON • _NEW_LINE body

    _NEW_LINE  shift, and go to state 57


State 33

   39 while_part: _WHILE num_exp • _COLON _NEW_LINE $@1 body
   52 num_exp: num_exp • _AROP num_exp_start
   53        | num_exp • _LOP num_exp_start
   54        | num_exp • _RELOP num_exp_start

    _COLON  shift, and go to state 58
    _AROP   shift, and go to state 45
    _LOP    shift, and go to state 46
    _RELOP  shift, and go to state 47


State 34

   21 function_call: _ID _LPAREN • arguments _RPAREN

    $default  reduce using rule 22 (arguments)

    arguments  go to state 59


State 35

   18 assign_statement: _ID _ASSIGN • num_exp

    $default  reduce using rule 56 (negation)

    num_exp        go to state 60
    num_exp_start  go to state 29
    negation       go to state 30


State 36

    0 $accept: file $end •

    $default  accept


State 37

    5 statement_list: statement_list statement •

    $default  reduce using rule 5 (statement_list)


State 38

    6 statement: simple_statement _NEW_LINE •

    $default  reduce using rule 6 (statement)


State 39

   33 if_statement: if_part elif_part • else_part
   36 elif_part: elif_part • _ELIF num_exp _COLON _NEW_LINE body

    _ELIF  shift, and go to state 61
    _ELSE  shift, and go to state 40

    $default  reduce using rule 48 (else_part)

    else_part  go to state 62


State 40

   49 else_part: _ELSE • _COLON _NEW_LINE body

    _COLON  shift, and go to state 63


State 41

   37 while_statement: while_part else_part •

    $default  reduce using rule 37 (while_statement)


State 42

   40 try_except_statement: try_part except_part • finally_or_else_part
   43 except_part: except_part • _EXCEPT _ID _COLON _NEW_LINE body
   44            | except_part • _EXCEPT _COLON _NEW_LINE body

    _ELSE     shift, and go to state 64
    _EXCEPT   shift, and go to state 65
    _FINALLY  shift, and go to state 66

    $default  reduce using rule 45 (finally_or_else_part)

    finally_or_else_part  go to state 67


State 43

   26 function_def: _DEF _ID _LPAREN • parameters _RPAREN _COLON _NEW_LINE body

    _ID  shift, and go to state 68

    $default  reduce using rule 27 (parameters)

    parameters              go to state 69
    param_with_default_val  go to state 70


State 44

   34 if_part: _IF num_exp _COLON • _NEW_LINE body

    _NEW_LINE  shift, and go to state 71


State 45

   52 num_exp: num_exp _AROP • num_exp_start

    $default  reduce using rule 56 (negation)

    num_exp_start  go to state 72
    negation       go to state 30


State 46

   53 num_exp: num_exp _LOP • num_exp_start

    $default  reduce using rule 56 (negation)

    num_exp_start  go to state 73
    negation       go to state 30


State 47

   54 num_exp: num_exp _RELOP • num_exp_start

    $default  reduce using rule 56 (negation)

    num_exp_start  go to state 74
    negation       go to state 30


State 48

   57 negation: negation _NOT •

    $default  reduce using rule 57 (negation)


State 49

   61 exp: _LPAREN • num_exp _RPAREN

    $default  reduce using rule 56 (negation)

    num_exp        go to state 75
    num_exp_start  go to state 29
    negation       go to state 30


State 50

   21 function_call: _ID • _LPAREN arguments _RPAREN
   59 exp: _ID •

    _LPAREN  shift, and go to state 34

    $default  reduce using rule 59 (exp)


State 51

   62 literal: _NUM_BOOL •

    $default  reduce using rule 62 (literal)


State 52

   63 literal: _STRING •

    $default  reduce using rule 63 (literal)


State 53

   64 literal: _NONE •

    $default  reduce using rule 64 (literal)


State 54

   60 exp: function_call •

    $default  reduce using rule 60 (exp)


State 55

   55 num_exp_start: negation exp •

    $default  reduce using rule 55 (num_exp_start)


State 56

   58 exp: literal •

    $default  reduce using rule 58 (exp)


State 57

   41 try_part: _TRY _COLON _NEW_LINE • body

    _INDENT  shift, and go to state 76

    body  go to state 77


State 58

   39 while_part: _WHILE num_exp _COLON • _NEW_LINE $@1 body

    _NEW_LINE  shift, and go to state 78


State 59

   21 function_call: _ID _LPAREN arguments • _RPAREN
   23 arguments: arguments • args

    _RPAREN  shift, and go to state 79

    $default  reduce using rule 56 (negation)

    args           go to state 80
    num_exp        go to state 81
    num_exp_start  go to state 29
    negation       go to state 30


State 60

   18 assign_statement: _ID _ASSIGN num_exp •
   52 num_exp: num_exp • _AROP num_exp_start
   53        | num_exp • _LOP num_exp_start
   54        | num_exp • _RELOP num_exp_start

    _AROP   shift, and go to state 45
    _LOP    shift, and go to state 46
    _RELOP  shift, and go to state 47

    $default  reduce using rule 18 (assign_statement)


State 61

   36 elif_part: elif_part _ELIF • num_exp _COLON _NEW_LINE body

    $default  reduce using rule 56 (negation)

    num_exp        go to state 82
    num_exp_start  go to state 29
    negation       go to state 30


State 62

   33 if_statement: if_part elif_part else_part •

    $default  reduce using rule 33 (if_statement)


State 63

   49 else_part: _ELSE _COLON • _NEW_LINE body

    _NEW_LINE  shift, and go to state 83


State 64

   47 finally_or_else_part: _ELSE • _COLON _NEW_LINE body

    _COLON  shift, and go to state 84


State 65

   43 except_part: except_part _EXCEPT • _ID _COLON _NEW_LINE body
   44            | except_part _EXCEPT • _COLON _NEW_LINE body

    _COLON  shift, and go to state 85
    _ID     shift, and go to state 86


State 66

   46 finally_or_else_part: _FINALLY • _COLON _NEW_LINE body

    _COLON  shift, and go to state 87


State 67

   40 try_except_statement: try_part except_part finally_or_else_part •

    $default  reduce using rule 40 (try_except_statement)


State 68

   28 parameters: _ID •
   32 param_with_default_val: _ID • _ASSIGN num_exp

    _ASSIGN  shift, and go to state 88

    $default  reduce using rule 28 (parameters)


State 69

   26 function_def: _DEF _ID _LPAREN parameters • _RPAREN _COLON _NEW_LINE body
   30 parameters: parameters • _COMMA _ID
   31           | parameters • _COMMA param_with_default_val

    _COMMA   shift, and go to state 89
    _RPAREN  shift, and go to state 90


State 70

   29 parameters: param_with_default_val •

    $default  reduce using rule 29 (parameters)


State 71

   34 if_part: _IF num_exp _COLON _NEW_LINE • body

    _INDENT  shift, and go to state 76

    body  go to state 91


State 72

   52 num_exp: num_exp _AROP num_exp_start •

    $default  reduce using rule 52 (num_exp)


State 73

   53 num_exp: num_exp _LOP num_exp_start •

    $default  reduce using rule 53 (num_exp)


State 74

   54 num_exp: num_exp _RELOP num_exp_start •

    $default  reduce using rule 54 (num_exp)


State 75

   52 num_exp: num_exp • _AROP num_exp_start
   53        | num_exp • _LOP num_exp_start
   54        | num_exp • _RELOP num_exp_start
   61 exp: _LPAREN num_exp • _RPAREN

    _RPAREN  shift, and go to state 92
    _AROP    shift, and go to state 45
    _LOP     shift, and go to state 46
    _RELOP   shift, and go to state 47


State 76

   50 body: _INDENT • statement_list _DEDENT

    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    statement_list        go to state 93
    statement             go to state 13
    simple_statement      go to state 14
    compound_statement    go to state 15
    assign_statement      go to state 16
    return_statement      go to state 17
    function_call         go to state 18
    function_def          go to state 19
    if_statement          go to state 20
    if_part               go to state 21
    while_statement       go to state 22
    while_part            go to state 23
    try_except_statement  go to state 24
    try_part              go to state 25


State 77

   41 try_part: _TRY _COLON _NEW_LINE body •

    $default  reduce using rule 41 (try_part)


State 78

   39 while_part: _WHILE num_exp _COLON _NEW_LINE • $@1 body

    $default  reduce using rule 38 ($@1)

    $@1  go to state 94


State 79

   21 function_call: _ID _LPAREN arguments _RPAREN •

    $default  reduce using rule 21 (function_call)


State 80

   23 arguments: arguments args •
   25 args: args • _COMMA num_exp

    _COMMA  shift, and go to state 95

    $default  reduce using rule 23 (arguments)


State 81

   24 args: num_exp •
   52 num_exp: num_exp • _AROP num_exp_start
   53        | num_exp • _LOP num_exp_start
   54        | num_exp • _RELOP num_exp_start

    _AROP   shift, and go to state 45
    _LOP    shift, and go to state 46
    _RELOP  shift, and go to state 47

    $default  reduce using rule 24 (args)


State 82

   36 elif_part: elif_part _ELIF num_exp • _COLON _NEW_LINE body
   52 num_exp: num_exp • _AROP num_exp_start
   53        | num_exp • _LOP num_exp_start
   54        | num_exp • _RELOP num_exp_start

    _COLON  shift, and go to state 96
    _AROP   shift, and go to state 45
    _LOP    shift, and go to state 46
    _RELOP  shift, and go to state 47


State 83

   49 else_part: _ELSE _COLON _NEW_LINE • body

    _INDENT  shift, and go to state 76

    body  go to state 97


State 84

   47 finally_or_else_part: _ELSE _COLON • _NEW_LINE body

    _NEW_LINE  shift, and go to state 98


State 85

   44 except_part: except_part _EXCEPT _COLON • _NEW_LINE body

    _NEW_LINE  shift, and go to state 99


State 86

   43 except_part: except_part _EXCEPT _ID • _COLON _NEW_LINE body

    _COLON  shift, and go to state 100


State 87

   46 finally_or_else_part: _FINALLY _COLON • _NEW_LINE body

    _NEW_LINE  shift, and go to state 101


State 88

   32 param_with_default_val: _ID _ASSIGN • num_exp

    $default  reduce using rule 56 (negation)

    num_exp        go to state 102
    num_exp_start  go to state 29
    negation       go to state 30


State 89

   30 parameters: parameters _COMMA • _ID
   31           | parameters _COMMA • param_with_default_val

    _ID  shift, and go to state 103

    param_with_default_val  go to state 104


State 90

   26 function_def: _DEF _ID _LPAREN parameters _RPAREN • _COLON _NEW_LINE body

    _COLON  shift, and go to state 105


State 91

   34 if_part: _IF num_exp _COLON _NEW_LINE body •

    $default  reduce using rule 34 (if_part)


State 92

   61 exp: _LPAREN num_exp _RPAREN •

    $default  reduce using rule 61 (exp)


State 93

    5 statement_list: statement_list • statement
   50 body: _INDENT statement_list • _DEDENT

    _DEDENT    shift, and go to state 106
    _BREAK     shift, and go to state 2
    _CONTINUE  shift, and go to state 3
    _DEF       shift, and go to state 4
    _IF        shift, and go to state 5
    _PASS      shift, and go to state 6
    _RETURN    shift, and go to state 7
    _TRY       shift, and go to state 8
    _WHILE     shift, and go to state 9
    _ID        shift, and go to state 10

    statement             go to state 37
    simple_statement      go to state 14
    compound_statement    go to state 15
    assign_statement      go to state 16
    return_statement      go to state 17
    function_call         go to state 18
    function_def          go to state 19
    if_statement          go to state 20
    if_part               go to state 21
    while_statement       go to state 22
    while_part            go to state 23
    try_except_statement  go to state 24
    try_part              go to state 25


State 94

   39 while_part: _WHILE num_exp _COLON _NEW_LINE $@1 • body

    _INDENT  shift, and go to state 76

    body  go to state 107


State 95

   25 args: args _COMMA • num_exp

    $default  reduce using rule 56 (negation)

    num_exp        go to state 108
    num_exp_start  go to state 29
    negation       go to state 30


State 96

   36 elif_part: elif_part _ELIF num_exp _COLON • _NEW_LINE body

    _NEW_LINE  shift, and go to state 109


State 97

   49 else_part: _ELSE _COLON _NEW_LINE body •

    $default  reduce using rule 49 (else_part)


State 98

   47 finally_or_else_part: _ELSE _COLON _NEW_LINE • body

    _INDENT  shift, and go to state 76

    body  go to state 110


State 99

   44 except_part: except_part _EXCEPT _COLON _NEW_LINE • body

    _INDENT  shift, and go to state 76

    body  go to state 111


State 100

   43 except_part: except_part _EXCEPT _ID _COLON • _NEW_LINE body

    _NEW_LINE  shift, and go to state 112


State 101

   46 finally_or_else_part: _FINALLY _COLON _NEW_LINE • body

    _INDENT  shift, and go to state 76

    body  go to state 113


State 102

   32 param_with_default_val: _ID _ASSIGN num_exp •
   52 num_exp: num_exp • _AROP num_exp_start
   53        | num_exp • _LOP num_exp_start
   54        | num_exp • _RELOP num_exp_start

    _AROP   shift, and go to state 45
    _LOP    shift, and go to state 46
    _RELOP  shift, and go to state 47

    $default  reduce using rule 32 (param_with_default_val)


State 103

   30 parameters: parameters _COMMA _ID •
   32 param_with_default_val: _ID • _ASSIGN num_exp

    _ASSIGN  shift, and go to state 88

    $default  reduce using rule 30 (parameters)


State 104

   31 parameters: parameters _COMMA param_with_default_val •

    $default  reduce using rule 31 (parameters)


State 105

   26 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON • _NEW_LINE body

    _NEW_LINE  shift, and go to state 114


State 106

   50 body: _INDENT statement_list _DEDENT •

    $default  reduce using rule 50 (body)


State 107

   39 while_part: _WHILE num_exp _COLON _NEW_LINE $@1 body •

    $default  reduce using rule 39 (while_part)


State 108

   25 args: args _COMMA num_exp •
   52 num_exp: num_exp • _AROP num_exp_start
   53        | num_exp • _LOP num_exp_start
   54        | num_exp • _RELOP num_exp_start

    _AROP   shift, and go to state 45
    _LOP    shift, and go to state 46
    _RELOP  shift, and go to state 47

    $default  reduce using rule 25 (args)


State 109

   36 elif_part: elif_part _ELIF num_exp _COLON _NEW_LINE • body

    _INDENT  shift, and go to state 76

    body  go to state 115


State 110

   47 finally_or_else_part: _ELSE _COLON _NEW_LINE body •

    $default  reduce using rule 47 (finally_or_else_part)


State 111

   44 except_part: except_part _EXCEPT _COLON _NEW_LINE body •

    $default  reduce using rule 44 (except_part)


State 112

   43 except_part: except_part _EXCEPT _ID _COLON _NEW_LINE • body

    _INDENT  shift, and go to state 76

    body  go to state 116


State 113

   46 finally_or_else_part: _FINALLY _COLON _NEW_LINE body •

    $default  reduce using rule 46 (finally_or_else_part)


State 114

   26 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON _NEW_LINE • body

    _INDENT  shift, and go to state 76

    body  go to state 117


State 115

   36 elif_part: elif_part _ELIF num_exp _COLON _NEW_LINE body •

    $default  reduce using rule 36 (elif_part)


State 116

   43 except_part: except_part _EXCEPT _ID _COLON _NEW_LINE body •

    $default  reduce using rule 43 (except_part)


State 117

   26 function_def: _DEF _ID _LPAREN parameters _RPAREN _COLON _NEW_LINE body •

    $default  reduce using rule 26 (function_def)
